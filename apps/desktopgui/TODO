HIGH PRIORITY:
- Allow desktopgui to start, stop and restart I2P. - DONE
- Correct logging system - DONE
- Internationalisation:
    * Add strings - DONE
    * Add Windows support - NEED TO CHECK
    * Might need some kind of trigger to reload the menu (for live language switching) - DONE
    * Language choice is not actually set as a parameter in I2P config?
        As a result, desktopgui always starts with the default, unless you manually set the language.
        DONE - uses routerconsole.lang -- this parameter is now updated in routerconsole as well
- Check if we're inside I2P without using a command-line parameter - DONE
- Modify installer to set I2P directory parameter; or use $I2P? - Is already there
- Include in installer - TODO
- Start desktopgui without adding to clients.config and without adding a dependency on routerconsole!
  * One possibility:
        Adding some kind of 'ApplicationManager' that allows starting applications.
        Extra remark: ApplicationManager should also allow stopping certain applications from launching.
- Fix tabs versus spaces ;-)
UNKNOWN:
- API to allow applications to add themselves to the menu?
    * registerApplication(); -- should return a positive number on success, -1 on failure
    * unregisterApplication(int); -- should return nothing (or bool for success?), and the parameter should be the number given when registering the application
- Fetch I2P localhost from the core I2P application? 
- Use I2PAppContext::appDir (something like that) for desktopgui data.
- Consider SWT as option
    * Check core/java/src/net/i2p/util/FileUtil.java for dynamic jar loading
    * Possible logic:
        - First try to load SWT (has the most options and is not ugly)
        - Then load AWT
- Access router.jar from other JVM? Is this possible? -- no: use I2CP with auth (not ready yet)
- Start desktopgui with another user than the user starting I2P (required for daemon usage).

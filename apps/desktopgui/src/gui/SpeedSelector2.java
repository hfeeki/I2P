/*
 * ProfileSelector2.java
 *
 * Created on 3 april 2009, 14:36
 */

package gui;

import java.awt.Dimension;
import java.awt.Point;
import java.util.Enumeration;
import java.util.Properties;
import javax.swing.AbstractButton;
import persistence.PropertyManager;

/**
 *
 * @author  mathias
 */
public class SpeedSelector2 extends javax.swing.JFrame {
    Properties props;

    /** Creates new form ProfileSelector2 */
    public SpeedSelector2(Point point, Dimension dimension) {
        this.props = PropertyManager.getProps();
        initComponents();
        this.setLocation(point);
        this.setSize(dimension);
        loadButtonSelection();
        this.setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        nextButton = new javax.swing.JButton();
        returnButton = new javax.swing.JButton();
        questionLabel = new javax.swing.JLabel();
        browseButton = new javax.swing.JRadioButton();
        downloadButton = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(desktopgui.Main.class).getContext().getResourceMap(SpeedSelector2.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        nextButton.setText(resourceMap.getString("nextButton.text")); // NOI18N
        nextButton.setName("nextButton"); // NOI18N
        nextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextButtonMouseClicked(evt);
            }
        });

        returnButton.setText(resourceMap.getString("returnButton.text")); // NOI18N
        returnButton.setName("returnButton"); // NOI18N
        returnButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnButtonMouseClicked(evt);
            }
        });

        questionLabel.setText(resourceMap.getString("questionLabel.text")); // NOI18N
        questionLabel.setName("questionLabel"); // NOI18N

        buttonGroup1.add(browseButton);
        browseButton.setText(resourceMap.getString("browseButton.text")); // NOI18N
        browseButton.setName("browseButton"); // NOI18N

        buttonGroup1.add(downloadButton);
        downloadButton.setText(resourceMap.getString("downloadButton.text")); // NOI18N
        downloadButton.setName("downloadButton"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(406, Short.MAX_VALUE)
                .addComponent(returnButton)
                .addGap(18, 18, 18)
                .addComponent(nextButton)
                .addGap(74, 74, 74))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(questionLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(downloadButton)
                            .addComponent(browseButton))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(questionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(browseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(downloadButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nextButton)
                    .addComponent(returnButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void returnButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnButtonMouseClicked
    saveButtonSelection();
    PropertyManager.saveProps(props);
    new SpeedSelector(this.getLocationOnScreen(), this.getSize()).setVisible(true);
    this.dispose();
}//GEN-LAST:event_returnButtonMouseClicked

private void nextButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextButtonMouseClicked
    saveButtonSelection();
    PropertyManager.saveProps(props);
    new SpeedSelector3(this.getLocationOnScreen(), this.getSize()).setVisible(true);
    this.dispose();
}//GEN-LAST:event_nextButtonMouseClicked

private void loadButtonSelection() {
    Enumeration<AbstractButton> elements = buttonGroup1.getElements();
    while(elements.hasMoreElements()) {
        AbstractButton button = elements.nextElement();
        if(button == null)
            continue;
        if(props.getProperty(SpeedSelectorConstants.USERTYPE) == null)
            break;
        String type = button.getText().split(":")[0];
        if(type.equals(props.getProperty(SpeedSelectorConstants.USERTYPE))) {
            button.setSelected(true);
            break;
        }
    }
}

private void saveButtonSelection() {
    Enumeration<AbstractButton> elements = buttonGroup1.getElements();
    while(elements.hasMoreElements()) {
        AbstractButton button = elements.nextElement();
        if(button == null)
            continue;
        if(button.isSelected()) {
            String type = button.getText().split(":")[0];
            props.setProperty(SpeedSelectorConstants.USERTYPE, type);
            break;
        }
    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton browseButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton downloadButton;
    private javax.swing.JButton nextButton;
    private javax.swing.JLabel questionLabel;
    private javax.swing.JButton returnButton;
    // End of variables declaration//GEN-END:variables

}

/*
 * ProfileSelector.java
 *
 * Created on 3 april 2009, 13:57
 */

package gui;

import java.awt.Dimension;
import java.awt.Point;
import java.util.Properties;
import javax.swing.JTextField;
import persistence.PropertyManager;
import util.IntegerVerifier;

/**
 *
 * @author  mathias
 */
public class SpeedSelector extends javax.swing.JFrame {

    /** Creates new form ProfileSelector */
    public SpeedSelector() {
        this.props = PropertyManager.getProps();
        initComponents();
        initComponentsCustom();
        initSpeeds(props);
        this.setVisible(true);
    }
    
    public SpeedSelector(Point point, Dimension dimension) {
        this();
        this.setLocation(point);
        this.setSize(dimension);
    }
    
    public void initComponentsCustom() {
        ((JTextField)uploadChoice.getEditor().getEditorComponent()).setInputVerifier(new IntegerVerifier()); 
        ((JTextField)downloadChoice.getEditor().getEditorComponent()).setInputVerifier(new IntegerVerifier()); 
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nextButton = new javax.swing.JButton();
        uploadLabel = new javax.swing.JLabel();
        downloadLabel = new javax.swing.JLabel();
        uploadChoice = new javax.swing.JComboBox();
        downloadChoice = new javax.swing.JComboBox();
        kbps1 = new javax.swing.JLabel();
        kbps2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(desktopgui.Main.class).getContext().getResourceMap(SpeedSelector.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        nextButton.setText(resourceMap.getString("nextButton.text")); // NOI18N
        nextButton.setName("nextButton"); // NOI18N
        nextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextButtonMouseClicked(evt);
            }
        });

        uploadLabel.setText(resourceMap.getString("uploadLabel.text")); // NOI18N
        uploadLabel.setName("uploadLabel"); // NOI18N

        downloadLabel.setText(resourceMap.getString("downloadLabel.text")); // NOI18N
        downloadLabel.setName("downloadLabel"); // NOI18N

        uploadChoice.setEditable(true);
        uploadChoice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "100", "200", "500", "1000", "2000", "4000", "8000", "10000", "20000", "50000", "100000" }));
        uploadChoice.setSelectedIndex(3);
        uploadChoice.setName("uploadChoice"); // NOI18N

        downloadChoice.setEditable(true);
        downloadChoice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "100", "200", "500", "1000", "2000", "4000", "8000", "10000", "20000", "50000", "100000" }));
        downloadChoice.setSelectedIndex(3);
        downloadChoice.setName("downloadChoice"); // NOI18N

        kbps1.setText(resourceMap.getString("kbps1.text")); // NOI18N
        kbps1.setName("kbps1"); // NOI18N

        kbps2.setText(resourceMap.getString("kbps2.text")); // NOI18N
        kbps2.setName("kbps2"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(downloadLabel)
                    .addComponent(uploadLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(downloadChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kbps2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(uploadChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(kbps1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(nextButton)
                            .addGap(34, 34, 34))))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uploadLabel)
                    .addComponent(uploadChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kbps1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(downloadLabel)
                    .addComponent(downloadChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kbps2))
                .addContainerGap(173, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(271, Short.MAX_VALUE)
                .addComponent(nextButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void nextButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextButtonMouseClicked
    props.setProperty(SpeedSelectorConstants.MAXUPLOADCAPABLE, uploadChoice.getSelectedItem().toString());
    props.setProperty(SpeedSelectorConstants.MAXDOWNLOADCAPABLE, downloadChoice.getSelectedItem().toString());
    PropertyManager.saveProps(props);
    new SpeedSelector2(this.getLocationOnScreen(), this.getSize());
    this.dispose();
}//GEN-LAST:event_nextButtonMouseClicked

private void initSpeeds(Properties props) {
    String up = props.getProperty(SpeedSelectorConstants.MAXUPLOADCAPABLE);
    String down = props.getProperty(SpeedSelectorConstants.MAXDOWNLOADCAPABLE);
    
    if(up == null)
        props.setProperty(SpeedSelectorConstants.MAXUPLOADCAPABLE, "1000");
    if(down == null)
        props.setProperty(SpeedSelectorConstants.MAXDOWNLOADCAPABLE, "1000");
    
    uploadChoice.setSelectedItem(props.getProperty(SpeedSelectorConstants.MAXUPLOADCAPABLE));
    downloadChoice.setSelectedItem(props.getProperty(SpeedSelectorConstants.MAXDOWNLOADCAPABLE));
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox downloadChoice;
    private javax.swing.JLabel downloadLabel;
    private javax.swing.JLabel kbps1;
    private javax.swing.JLabel kbps2;
    private javax.swing.JButton nextButton;
    private javax.swing.JComboBox uploadChoice;
    private javax.swing.JLabel uploadLabel;
    // End of variables declaration//GEN-END:variables

    Properties props;
}

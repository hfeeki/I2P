<?xml version="1.0"?>
<project name="addressbook" default="war" basedir=".">

	<property name="src" value="java/src"/>
	<property name="build" value="build"/>
	<property name="dist"  location="dist"/>
	<property name="jar" value="addressbook.jar"/>
	<property name="war" value="addressbook.war"/>
	<property name="javac.compilerargs" value="" />
	
	<target name="init">
		<mkdir dir="${build}"/>
		<mkdir dir="${dist}"/>
	</target>

	<target name="clean">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>

	<target name="distclean" depends="clean" />

        <condition property="depend.available">
            <typefound name="depend" />
        </condition>
        <target name="depend" if="depend.available">
            <depend
                cache="../../build"
                srcdir="${src}"
                destdir="${build}" >
                <!-- Depend on classes instead of jars where available -->
                <classpath>
                    <pathelement location="../../core/java/build/obj" />
                    <pathelement location="../jetty/jettylib/javax.servlet.jar" />
                </classpath>
            </depend>
        </target>

	<target name="compile" depends="init, depend">
		<javac debug="true" deprecation="on" source="1.5" target="1.5" 
                       srcdir="${src}" destdir="${build}">
            <compilerarg line="${javac.compilerargs}" />
            <classpath>
                <pathelement location="../../core/java/build/i2p.jar" />
                <pathelement location="../jetty/jettylib/javax.servlet.jar" />
            </classpath>
		</javac>
	</target>

	<target name="jar" depends="compile">
		<jar basedir="${build}" destfile="${dist}/${jar}">
			<manifest>
				<attribute name="Main-Class" value="addressbook.Daemon"/>
			</manifest>
		</jar>
	</target>
	
	<target name="war" depends="compile" unless="war.uptodate">
		<mkdir dir="${dist}/tmp"/>
		<mkdir dir="${dist}/tmp/WEB-INF"/>
		<mkdir dir="${dist}/tmp/WEB-INF/classes"/>
		<copy todir="${dist}/tmp/WEB-INF/classes">
			<fileset dir="${build}"/>
		</copy>
		<war basedir="${dist}/tmp" webxml="web.xml" destfile="${dist}/${war}"/>
		<delete dir="${dist}/tmp"/>
	</target>
	
        <uptodate property="war.uptodate" targetfile="${dist}/${war}">
            <srcfiles dir= "." includes="${build}/**/*.class, web.xml"/>
        </uptodate>

</project>

<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="all" name="i2ptunnel">
    <target name="all" depends="clean, build" />
    <target name="build" depends="builddep, jar, war" />
    <target name="builddep">
        <!-- run from top level build.xml to get dependencies built -->
    </target>
    <condition property="depend.available">
        <typefound name="depend" />
    </condition>
    <target name="depend" if="depend.available">
        <depend
            cache="../../../build"
            srcdir="./src" 
            destdir="./build/obj" >
            <!-- Depend on classes instead of jars where available -->
            <classpath>
                <pathelement location="../../../core/java/build/obj" />
                <pathelement location="../../ministreaming/java/build/obj" />
            </classpath>
        </depend>
    </target>
    <property name="javac.compilerargs" value="" />
    <target name="compile" depends="depend">
        <mkdir dir="./build" />
        <mkdir dir="./build/obj" />
        <javac 
            srcdir="./src" 
            debug="true" deprecation="on" source="1.5" target="1.5" 
            destdir="./build/obj" 
            classpath="../../../core/java/build/i2p.jar:../../ministreaming/java/build/mstreaming.jar" >
            <compilerarg line="${javac.compilerargs}" />
        </javac>
    </target>

    <!-- TODO: Move the web classes from the jar to the war - they are not part of the API
      -  This will require sponge to rewrite some seedless stuff that uses it.
     -->
    <target name="jar" depends="builddep, compile">
        <jar destfile="./build/i2ptunnel.jar" basedir="./build/obj" includes="**/*.class">
            <manifest>
                <attribute name="Main-Class" value="net.i2p.i2ptunnel.I2PTunnel" />
                <attribute name="Class-Path" value="i2p.jar mstreaming.jar" />
            </manifest>
        </jar>
    </target>

    <target name="bundle" depends="compile, precompilejsp">
        <!-- Update the messages_*.po files.
             We need to supply the bat file for windows, and then change the fail property to true -->
        <exec executable="sh" osfamily="unix" failifexecutionfails="false" >
            <arg value="./bundle-messages.sh" />
        </exec>
        <exec executable="sh" osfamily="mac" failifexecutionfails="false" >
            <arg value="./bundle-messages.sh" />
        </exec>
        <exec executable="cmd" osfamily="windows" failifexecutionfails="false" >
            <arg value="/c" />
            <arg value="bundle-messages.bat" />
        </exec>
    </target>

    <target name="poupdate" depends="compile, precompilejsp">
        <!-- Update the messages_*.po files. -->
        <exec executable="sh" osfamily="unix" failifexecutionfails="true" >
            <arg value="./bundle-messages.sh" />
            <arg value="-p" />
        </exec>
        <exec executable="sh" osfamily="mac" failifexecutionfails="true" >
            <arg value="./bundle-messages.sh" />
            <arg value="-p" />
        </exec>
        <exec executable="cmd" osfamily="windows" failifexecutionfails="true" >
            <arg value="/c" />
            <arg value="bundle-messages.bat" />
            <arg value="-p" />
        </exec>
    </target>

    <target name="war" depends="precompilejsp, bundle"> 
        <war destfile="build/i2ptunnel.war" webxml="../jsp/web-out.xml"
             basedir="../jsp/" excludes="web.xml, web-fragment.xml, web-out.xml, **/*.java, *.jsp">
        </war>
    </target>

    <target name="precompilejsp" depends="jar" unless="precompilejsp.uptodate">
        <delete dir="../jsp/WEB-INF/" />
        <delete file="../jsp/web-fragment.xml" />
        <delete file="../jsp/web-out.xml" />
        <mkdir dir="../jsp/WEB-INF/" />
        <mkdir dir="../jsp/WEB-INF/classes" />
        <!-- there are various jspc ant tasks, but they all seem a bit flakey -->
        <java classname="org.apache.jasper.JspC" fork="true" failonerror="true">
            <classpath>
                <pathelement location="../../jetty/jettylib/jasper-compiler.jar" />
                <pathelement location="../../jetty/jettylib/jasper-runtime.jar" />
                <pathelement location="../../jetty/jettylib/javax.servlet.jar" />
                <pathelement location="../../jetty/jettylib/commons-logging.jar" />
                <pathelement location="../../jetty/jettylib/commons-el.jar" />
                <pathelement location="../../jetty/jettylib/ant.jar" />
                <pathelement location="build/i2ptunnel.jar" />
            </classpath>
            <arg value="-d" />
            <arg value="../jsp/WEB-INF/classes" />
            <arg value="-p" />
            <arg value="net.i2p.i2ptunnel.jsp" />
            <arg value="-webinc" />
            <arg value="../jsp/web-fragment.xml" />
            <arg value="-webapp" />
            <arg value="../jsp/" />
        </java>
        <javac debug="true" deprecation="on" source="1.5" target="1.5" 
               destdir="../jsp/WEB-INF/classes/" srcdir="../jsp/WEB-INF/classes" includes="**/*.java">
            <compilerarg line="${javac.compilerargs}" />
            <classpath>
                <pathelement location="../../jetty/jettylib/jasper-runtime.jar" />
                <pathelement location="../../jetty/jettylib/javax.servlet.jar" />
                <pathelement location="../../jetty/jettylib/commons-logging.jar" />
                <pathelement location="../../jetty/jettylib/commons-el.jar" />
                <pathelement location="build/i2ptunnel.jar" />
            </classpath>
        </javac>
        <copy file="../jsp/web.xml" tofile="../jsp/web-out.xml" />
        <loadfile property="jspc.web.fragment" srcfile="../jsp/web-fragment.xml" />
        <replace file="../jsp/web-out.xml">
            <replacefilter token="&lt;!-- precompiled servlets --&gt;" value="${jspc.web.fragment}" />
        </replace>
    </target>

    <uptodate property="precompilejsp.uptodate" targetfile="../jsp/web-out.xml">
        <srcfiles dir= "../jsp" includes="*.jsp, *.html, web.xml"/>
    </uptodate>

    <target name="javadoc">
        <mkdir dir="./build" />
        <mkdir dir="./build/javadoc" />
        <javadoc 
            sourcepath="./src:../../../core/java/src:../../ministreaming/java/src" destdir="./build/javadoc" 
            packagenames="*" 
            use="true" 
            splitindex="true" 
            windowtitle="I2PTunnel" />
    </target>

    <target name="compileTest">
        <mkdir dir="./build" />
        <mkdir dir="./build/obj" />
        <javac srcdir="./src:./test" debug="true" source="1.5" target="1.5" deprecation="on" destdir="./build/obj" >
            <compilerarg line="${javac.compilerargs}" />
            <classpath>
                <pathelement location="../../../core/java/build/i2p.jar" />
                <pathelement location="../../ministreaming/java/build/mstreaming.jar" />
            </classpath>
        </javac>
    </target>
    <target name="test" depends="clean, compileTest">
        <junit printsummary="on" fork="yes">
            <classpath>
                <pathelement path="${classpath}" />
                <pathelement location="./build/obj" />
                <pathelement location="../../../core/java/build/i2p.jar" />
            </classpath>
            <batchtest>
                <fileset dir="./test/">
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
            <formatter type="xml"/>
        </junit>
        <mkdir dir="../../../reports/" />
        <mkdir dir="../../../reports/i2ptunnel/" />
        <mkdir dir="../../../reports/i2ptunnel/junit/" />
        <delete>
            <fileset dir="../../../reports/i2ptunnel/junit">
                <include name="TEST-*.xml"/>
            </fileset>
        </delete>
        <copy todir="../../../reports/i2ptunnel/junit">
            <fileset dir=".">
                <include name="TEST-*.xml"/>
            </fileset>
        </copy>
        <delete>
            <fileset dir=".">
                <include name="TEST-*.xml"/>
            </fileset>
        </delete>
    </target>

    <target name="clean">
        <delete dir="./build" />
        <delete dir="../jsp/WEB-INF/" />
        <delete file="../jsp/web-fragment.xml" />
        <delete file="../jsp/web-out.xml" />
    </target>
    <target name="cleandep" depends="clean">
    </target>
    <target name="distclean" depends="clean">
    </target>
</project>
